name: Build and Push Docker Image to GCR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
      
env:
  PROJECT_ID: bespin-mhpark-dev
  IMAGE_NAME: testweb
  DOCKERFILE_PATH: ./Dockerfile
  SERVICE_ACCOUNT_EMAIL: git-action@bespin-mhpark-dev.iam.gserviceaccount.com
  
  
jobs:
  build_and_push:
    permissions:
      id-token: write
      contents: read
  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source code
      uses: 'actions/checkout@v3'
      
    - name: Delete existing credentials file
      run: rm -f /home/runner/work/web_wif/web_wif/*.json
      
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        create_credentials_file: true
        workload_identity_provider: 'projects/323044112454/locations/global/workloadIdentityPools/github-action-pool/providers/github-action-provider'
        service_account: 'git-action@bespin-mhpark-dev.iam.gserviceaccount.com'     
        
#     - name: Setup Google Cloud SDK
#       uses: google-github-actions/setup-gcloud@v1.1.0
#       with:
#         project_id: ${{ env.PROJECT_ID }}
#         service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
#         export_default_credentials: true

    - name: Configure Docker client
      run: |
        gcloud auth configure-docker -q
        
    - name: Build and push Docker image
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: latest
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        gcloud docker -- push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#     - name: Build Docker image
#       run: |
#         docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .
#       env:
#         TAG: latest
    
#     - name: Login to DockerHub
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
        
#     - name: Push Docker image to GCR
#       run: |
#         docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
#       env:
#         TAG: latest
